include "common.fbs";

namespace _16nar.data.constructor;

/// @brief 2D render systems.
enum RenderSystem : uint8
{
     QTree
}


/// @brief Common node information.
table NodeData
{
     parent:   uint32;
     position: Vec2f     (required);
     scale:    Vec2f     (required);
     origin:   Vec2f     (required);
     rotation: float32;
     name:     string;
     lib:      string;
     creator:  string;
     data:     [ubyte]   (flexbuffer);
}


/// @brief Drawable node information.
table DrawableData
{
     shader:   ResourceId     (required);
     layer:    int32;
     visible:  bool = true;
}


/// @brief Simple 2D node.
table Node2D
{
     node:     NodeData  (required);
}


/// @brief Node holding a sprite.
table SpriteNode
{
     node:          NodeData       (required);
     draw_data:     DrawableData   (required);
     texture_id:    ResourceId     (required);
     rect:          FloatRect      (required);
}


/// @brief Union to store any 2D node.
union AnyNode2D
{
     Node2D,
     SpriteNode
}


/// @brief Record about one state of the scene.
table SceneState2D
{
     quad_start:    Vec2f;
     quad_size:     Vec2f;
     state_size:    Vec2i;
     updating:      bool;
     rendering:     bool;
     nodes:         [AnyNode2D]    (required);
}


/// @brief Scene executed by engine.
table Scene2D
{
     render_system: RenderSystem;
     main_lib:      string;
     loop_func:     string;
     setup_func:    string;
     resources:     [string];
     libs:          [string];
     states:        [SceneState2D] (required);
}

root_type Scene2D;
file_identifier "16C2";  // 16nar engine, constructor 2D architecture
file_extension "nar";
