name: test-build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master", "dev" ]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        shared: [ "True", "False" ]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y xorg-dev
           libx11-xcb-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev
           libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev
           libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev
           libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-dri3-dev
           libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev
           libxcb-util-dev libxcb-util0-dev

    - name: Conan installation
      id: conan
      uses: turtlebrowser/get-conan@v1.0

    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"

    - name: Create default Conan profile
      run: conan profile detect --force

    - name: install Conan dependencies
      run:  conan install .
            --settings=build_type=${{ env.BUILD_TYPE }}
            --settings=compiler.cppstd=17
            --options=*:shared=${{ matrix.shared }}
            --build=missing

    - name: Build and test Conan package
      run:  conan create .
            --settings=build_type=${{ env.BUILD_TYPE }}
            --settings=compiler.cppstd=17
            --options=*:shared=${{ matrix.shared }}
            --build=missing

